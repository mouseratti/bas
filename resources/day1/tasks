1) Напишите программу, которая считывает три числа и выводит их сумму. Каждое число записано в отдельной строке.

2) Напишите программу, которая считывает длины двух катетов в прямоугольном треугольнике и выводит его площадь. Каждое число записано в отдельной строке.


3) n детей делят k яблок поровну, неделящийся остаток остается в корзинке. Сколько яблок достанется каждому? Сколько яблок останется?
Программа получает на вход числа n и k и должна вывести искомое количество яблок (два числа).

4) Дано число n. С начала суток прошло n минут. Определите, сколько часов и минут будут показывать электронные часы в этот момент. Программа должна вывести строку "HH:mm"



IF
5) Даны два целых числа. Выведите значение наименьшего из них.

6) Даны n целых чисел. Выведите значение меньшего\большего из них. На вход принимается n и параметр min либо max


7) Дано натуральное число. Требуется определить, является ли год с данным номером високосным. Если год является високосным, то выведите YES, иначе выведите NO. Напомним, что в соответствии с григорианским календарем, год является високосным, если его номер кратен 4, но не кратен 100, а также если он кратен 400.




FOR
8) По данному натуральному n вычислите сумму 1^3+2^3+3^3+...+n^3

9) По данному натуральному n вычислите значение n!. Пользоваться математической библиотекой math в этой задаче запрещено.

10) Дано N чисел: сначала вводится строка int чисел,
Подсчитайте количество НЕЧЕТНЫХ среди введенных чисел и выведите это количество.
*) Усложнение: строка может содержать не только числа
(functions,regexp,exceptions)


11) По данному натуральному n ≤ 9 выведите лесенку из n ступенек, i-я ступенька состоит из чисел от 1 до i без пробелов.





WHILE
12) По данному натуральному числу N найдите наибольшую целую степень двойки, не превосходящую N. Выведите показатель степени и саму степень.

13) В первый день спортсмен пробежал x километров, а затем он каждый день увеличивал пробег на 10% от предыдущего значения. По данному числу y определите номер дня, на который пробег спортсмена составит не менее y километров.
Программа получает на вход действительные числа x и y и должна вывести одно натуральное число.

14) По данному числу n определите n-е число Фибоначчи

15) Дано натуральное число A. Определите, каким по счету числом Фибоначчи оно является, то есть выведите такое число n, что φ(n) = A. Если А не является числом Фибоначчи, выведите число -1.



LIST
16) Создайте список l1, который содержит элементы: 'abcd', 786, 2.23, 'john', 70.2
- Распечатайте полный список l1
- Распечатайте первый элемент списка
- Элементы печати, начиная с 3-го элемента
Создайте список l2, содержащий элементы: 'second', '123'
Создайте список l3, содержащий l1 и l2. Измените значение l1[1]. Проверьте значения l3.
Создайте список l4, содержащий все элементы l2. Измените значение l2[0]. Распечатайте l4.

*) Given two arrays of strings a1 and a2
return a sorted array r in lexicographical order of the strings
a1 which are substrings of strings of a2.
#Example 1:
    a1 = ["arp", "live", "strong"]
    a2 = ["lively", "alive", "harp", "sharp", "armstrong"]
    returns ["arp", "live", "strong"]
#Example 2:
a1 = ["tarp", "mice", "bull"]
a2 = ["lively", "alive", "harp", "sharp", "armstrong"]
returns []
Beware: return must be without duplicates.
Don't mutate the inputs.


DICT
17 Дан текст.
Выведите слово, которое в этом тексте встречается чаще всего.
Если таких слов несколько, выведите то, которое меньше в лексикографическом порядке.


FUNCTIONS
18) Напишите функцию, которая вычисляет частоту символов для заданного текста.
Текст, подлежащий анализу, передается как аргумент, результат возвращается из функции.
Гласные и согласные подсчитайте отдельно.
   {“vowels”:
   {“a”: 4, “e”: 2},
   “consonants”:
   {“b”: 12, “g”:1}
   }

19) Даны четыре действительных числа: x1,y1, x2, y2. Напишите функцию distance(x1, y1, x2, y2), вычисляющая расстояние между точкой (x1,y1) и (x2,y2). Считайте четыре действительных числа и выведите результат работы этой функции.

*) The prime 41 is the result of the sum of many consecutive primes.

In fact, 2 + 3 + 5 + 7 + 11 + 13 = 41 , (6 addens)
Furthermore, the prime 41 is the prime below 100 (val_max) that has the longest chain of consecutive prime addens.
The prime with longest chain of addens for val_max = 500 is 499 with 17 addens.
In fact: 3+5+7+11+13+17+19+23+29+31+37+41+43+47+53+59+61= 499

Find the function prime_maxlength_chain(), that receives an argument val_max, the upper limit, all the found primes should be less than val_max and outputs this found prime.

Let's see some cases:

prime_maxlength_chain(100) == (41)
prime_maxlength_chain(500) == (499)

If we have more than one prime with these features, the function should output an array with the found primes sorted.
prime_maxlength_chain(499) == (379, 491)
100 ≤ val_max ≤ 500000