1. Собрать Docker-образ, внутри которого должен запускаться скрипт /bas/bas.sh
В качестве исходного образа использовать alpine


1.5 
а) Написать небольшой скрипт на C#
б)  Контейнеризовать его, используя инструкцию https://docs.docker.com/engine/examples/dotnetcore/


2. Необходимо создать docker-compose файл, состоящий из 3х сервисов:
  - consul - слушает порт 8081
  - rabbitmq - слушает порт 8082, 8083, логин\пароль bas\bas
  - postgres - слушает порт 8084; название базы данных по умолчанию  - bas

3.
а) создать каталоги /tmp/volumes/consul, /tmp/volumes/postgres
б) внести изменения в docker-compose файл таким образом, чтобы базы данных из контейнеров consul и postgres сохранялись в соответствующие каталоги


4.
 а) Собрать docker-образ postgresql-bas, который позволяет сохранять сделанные в БД изменения
 б) внести изменения в БД
 в) сохранить контейнер с данными в качестве нового образа postgresql-bas-commit (docker commit)
 Г) развернуть новый контейнер из полученного образа.
 д) Убедиться, что изменения доступны в новом контейнере

5.
    а) создать каталог /tmp/volumes/nexus
    б) запустить nexus с условием, что в качестве хранилища используется каталог /tmp/volumes/nexus
    в) создать учетную запись 
    г) проверить работоспособность полученного registry
    д) создать учетную запись для коллеги
    е) обменяться досупами к registry, запушить любой из локальных image в удаленный registry



